# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=59fb209b6a
# 
# 

# ********RoostGPT********
Feature: /2.1/laureates API

Background:
  * url target
  * def authToken = karate.properties['AUTH_TOKEN']

Scenario: Get all laureates
  Given path '/2.1/laureates'
  When method GET
  Then status 200
  And match header Content-Type == 'application/json'
  And match response.laureates == '#array'
  And match each response.laureates contains 
  """
  {
    id: '#number',
    wikipedia: {
      slug: '#string',
      english: '#string'  
    },
    wikidata: {
      id: '#string',
      url: '#string'
    },
    sameAs: '##array',
    links: '##array'
  }
  """
  And match response.meta.count == '#number'

Scenario: Get laureates with query parameters
  * def params = { limit: 10, sort: 'desc', gender: 'female', birthCountry: 'USA' }
  Given path '/2.1/laureates'
  And params params
  When method GET
  Then status 200
  And match header Content-Type == 'application/json'
  And match response.laureates == '#[10]'
  And match each response.laureates contains 
  """
  {
    id: '#number',
    laureateIfPerson: {
      gender: 'female',
      birth: {
        place: {
          country: {
            en: 'USA'
          }
        }  
      }
    }
  }
  """

Scenario: Get single laureate by ID
  * def laureateId = 123
  Given path '/2.1/laureates'
  And param ID = laureateId
  When method GET
  Then status 200
  And match header Content-Type == 'application/json' 
  And match response.laureates == '#[1]'
  And match response.laureates[0].id == laureateId

Scenario: Get laureates with invalid query parameter values
  * def invalidParams = { limit: 'abc', sort: 'invalid' }
  Given path '/2.1/laureates'
  And params invalidParams
  When method GET
  Then status 400
  And match header Content-Type == 'application/json'
  And match response == 
  """
  {
    code: '#string',
    message: '#string'
  }
  """
