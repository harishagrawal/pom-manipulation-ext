# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=8f84ba8c38
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

Background:
  * url target

Scenario: Get all Nobel Prizes
  Given path '/2.1/nobelPrizes'
  When method GET
  Then status 200
  And match header Content-Type contains 'application/json'
  And match response.nobelPrizes == '#array'
  And match each response.nobelPrizes contains 
  """
  {
    awardYear: '#number',
    category: {
      en: '#string',
      se: '#string',
      no: '#string'  
    },
    categoryFullName: {
      en: '#string',
      se: '#string',
      no: '#string'
    },
    dateAwarded: '#regex \\d{4}-\\d{2}-\\d{2}',
    prizeAmount: '#number',
    prizeAmountAdjusted: '#number',
    topMotivation: {
      en: '##string',
      se: '##string',
      no: '##string'
    },
    laureates: '#array'
  }
  """
  And match response.meta == 
  """
  {
    offset: '#number',
    limit: '#number',
    nobelPrizeYear: '##number',
    yearTo: '##number',
    nobelPrizeCategory: '##string',
    count: '#number'
  }
  """
  And match response.links == '#array'
  
Scenario: Get Nobel Prizes with query parameters
  * def params = 
  """
  {
    offset: 10,
    limit: 5,
    sort: 'desc',
    nobelPrizeYear: 2000,
    yearTo: 2010,
    nobelPrizeCategory: 'phy',
    format: 'json'
  }
  """
  Given path '/2.1/nobelPrizes'
  And params params
  When method GET
  Then status 200
  And match header Content-Type contains 'application/json'
  And match response.nobelPrizes == '#array'
  And match response.meta.offset == 10
  And match response.meta.limit == 5
  And match response.meta.nobelPrizeYear == 2000
  And match response.meta.yearTo == 2010
  And match response.meta.nobelPrizeCategory == 'phy'

Scenario: Get Nobel Prizes with invalid query parameters
  Given path '/2.1/nobelPrizes'
  And param invalidParam = 'test'
  When method GET
  Then status 400
  And match header Content-Type contains 'application/json'
  And match response == 
  """
  {
    code: '#string',
    message: '#string'
  }
  """

Scenario: Get Nobel Prize with non-existent year
  Given path '/2.1/nobelPrizes'
  And param nobelPrizeYear = 1800
  When method GET  
  Then status 404
  And match header Content-Type contains 'application/json'
  And match response ==
  """
  {
    code: '#string',
    message: '#string'
  }
  """
