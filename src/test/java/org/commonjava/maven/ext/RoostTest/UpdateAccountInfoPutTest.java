// Test generated by RoostGPT for test restA-turbo-assistant-kore using AI Type Open AI and AI Model gpt-4-1106-preview

// Test generated for /UpdateAccountInfo_put for http method type PUT in rest-assured framework

// RoostTestHash=adb57fbf1b

    private void validateErrorResponse(Response response) {
        assertThat("Description: Error: Bad Request", response.statusCode(), equalTo(400));
        // Assuming err structure shared across all error codes
        String errorMessage = response.jsonPath().getString("err.message");
        assertThat(errorMessage, notNullValue());
        assertThat(errorMessage, instanceOf(String.class));
    }

    private void validateUnauthenticatedResponse(Response response) {
        assertThat("Description: Error: Authorisation failed", response.statusCode(), equalTo(401));
        // Validate the error structure is as per the API spec
        String errorMessage = response.jsonPath().getString("err.message");
        assertThat(errorMessage, notNullValue());
        assertThat(errorMessage, instanceOf(String.class));
    }

    private void validateNotFoundResponse(Response response) {
        assertThat("Description: Error: Not Found", response.statusCode(), equalTo(404));
        // Validate the error structure is as per the API spec
        String errorMessage = response.jsonPath().getString("err.message");
        assertThat(errorMessage, notNullValue());
        assertThat(errorMessage, instanceOf(String.class));
    }

    // Additional method to show validation for successful response when more details are available.
    private void validateSuccessResponse(Response response) {
        assertThat("Description: successful operation", response.statusCode(), equalTo(200));
        // The structure has to be extracted from the Swagger file, but as an example:
        // assertThat(response.jsonPath().getString("someSuccessParameter"), is(notNullValue()));
        // Add further detailed assertions as per the actual success response structure from the Swagger spec
    }

