/*
Test generated by RoostGPT for test metering-integration-rest using AI Type Vertex AI and AI Model code-bison-32k

{
  background: null,
  rule: null,
  scenario: 'List Metering Labels\n' +
    '    When I send a GET request to "/v2.0/metering/metering-labels"\n' +
    '    Then the response status code should be 200\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the following metering labels:\n' +
    '      | id                                   | tenant_id                           | description            | name   |\n' +
    '      | a6700594-5b7a-4105-8bfe-723b346ce866 | 45345b0ee1ea477fac0f541b2cb79cd4   | label1 description     | label1 |\n' +
    '      | e131d186-b02d-4c0b-83d5-0c0725c4f812 | 45345b0ee1ea477fac0f541b2cb79cd4   | label2 description     | label2 |',
  title: 'List Metering Labels'
}

*/
 package org.commonjava.maven.ext.RoostTest;

import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.specification.RequestSpecification;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class listMeteringLabelsTest {

    private static final String ROOST_SERVER_URL = System.getenv("ROOST_SERVER_URL");
    private static RequestSpecification spec;

    @BeforeAll
    public static void setup() {
        spec = new RequestSpecBuilder()
                .setBaseUri(ROOST_SERVER_URL)
                .setContentType(ContentType.JSON)
                .build();
    }

    @Test
    public void listMeteringLabels() {
        // GIVEN
        String payload = "";

        // WHEN
        given()
                .spec(spec)
                .when()
                .get("/v2.0/metering/metering-labels")

        // THEN
        .then()
                .assertThat()
                .statusCode(200)
                .contentType(ContentType.JSON)
                .body("", hasKey("id"))
                .body("id", hasItem("a6700594-5b7a-4105-8bfe-723b346ce866"))
                .body("tenant_id", hasItem("45345b0ee1ea477fac0f541b2cb79cd4"))
                .body("description", hasItem("label1 description"))
                .body("name", hasItem("label1"))
                .body("id", hasItem("e131d186-b02d-4c0b-83d5-0c0725c4f812"))
                .body("tenant_id", hasItem("45345b0ee1ea477fac0f541b2cb79cd4"))
                .body("description", hasItem("label2 description"))
                .body("name", hasItem("label2"));
    }
}