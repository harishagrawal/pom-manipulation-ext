/*
Test generated by RoostGPT for test metering-integration-rest using AI Type Vertex AI and AI Model code-bison-32k

{
  background: null,
  rule: null,
  scenario: 'Show Metering Label Rule\n' +
    '    When I send a GET request to "/v2.0/metering/metering-label-rules/9536641a-7d14-4dc5-afaf-93a973ce0eb8"\n' +
    '    Then the response status code should be 200\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the metering label rule:\n' +
    '      | remote_ip_prefix | direction | metering_label_id                        | id                                   | excluded |\n' +
    '      | 20.0.0.0/24      | ingress   | e131d186-b02d-4c0b-83d5-0c0725c4f812   | 9536641a-7d14-4dc5-afaf-93a973ce0eb8 | false    |',
  title: 'Show Metering Label Rule'
}

*/
 package org.commonjava.maven.ext.RoostTest;

import com.jayway.restassured.RestAssured;
import com.jayway.restassured.config.SSLConfig;
import com.jayway.restassured.response.Response;
import com.jayway.restassured.specification.RequestSpecification;
import org.junit.Before;
import org.junit.Test;

import static com.jayway.restassured.RestAssured.given;
import static org.junit.Assert.assertEquals;

public class ShowMeteringLabelRuleTest {
    private static final String ROOST_SERVER_URL = System.getenv("ROOST_SERVER_URL");

    private RequestSpecification requestSpecification;
    private String payload;
    private String headers;

    @Before
    public void setup() {
        RestAssured.baseURI = ROOST_SERVER_URL;
        RestAssured.config = RestAssured.config().sslConfig(new SSLConfig().relaxedHTTPSValidation());
        requestSpecification = given();
        payload = "";
        headers = "";
    }

    @Test
    public void showMeteringLabelRule() {
        // GIVEN
        String meteringLabelRuleId = "9536641a-7d14-4dc5-afaf-93a973ce0eb8";

        // WHEN
        Response response = requestSpecification.get("/v2.0/metering/metering-label-rules/" + meteringLabelRuleId);

        // THEN
        assertEquals(200, response.getStatusCode());
        assertEquals("application/json", response.getContentType());
        assertEquals("{\n" +
                "  \"remote_ip_prefix\": \"20.0.0.0/24\",\n" +
                "  \"direction\": \"ingress\",\n" +
                "  \"metering_label_id\": \"e131d186-b02d-4c0b-83d5-0c0725c4f812\",\n" +
                "  \"id\": \"9536641a-7d14-4dc5-afaf-93a973ce0eb8\",\n" +
                "  \"excluded\": false\n" +
                "}", response.asString());
    }
}