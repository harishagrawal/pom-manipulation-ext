/*
Test generated by RoostGPT for test metering-integration-rest using AI Type Vertex AI and AI Model code-bison-32k

{
  background: 'Given the API is available',
  rule: null,
  scenario: 'Show Metering Label Rule\n' +
    '    When I send a GET request to "/v2.0/metering/metering-label-rules/9536641a-7d14-4dc5-afaf-93a973ce0eb8"\n' +
    '    Then the response status code should be 200\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the metering label rule:\n' +
    '      | remote_ip_prefix | direction | metering_label_id                        | id                                   | excluded |\n' +
    '      | 20.0.0.0/24      | ingress   | e131d186-b02d-4c0b-83d5-0c0725c4f812   | 9536641a-7d14-4dc5-afaf-93a973ce0eb8 | false    |',
  title: 'Show Metering Label Rule'
}

*/
package org.commonjava.maven.ext.RoostTest;

import io.restassured.builder.RequestSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class showMeteringLabelRuleTest {

    @Test
    public void showMeteringLabelRule() {
        // Given the API is available
        String meteringLabelRuleId = "9536641a-7d14-4dc5-afaf-93a973ce0eb8";

        // When I send a GET request to "/v2.0/metering/metering-label-rules/9536641a-7d14-4dc5-afaf-93a973ce0eb8"
        RequestSpecification requestSpecification = new RequestSpecBuilder()
                .setBaseUri(System.getenv("{{ROOST_SERVER_URL}}"))
                .setBasePath("/v2.0/metering/metering-label-rules/" + meteringLabelRuleId)
                .build();

        Response response = given(requestSpecification)
                .when()
                .get();

        // Then the response status code should be 200
        response.then()
                .statusCode(200);

        // And the response should be in JSON
        response.then()
                .contentType(ContentType.JSON);

        // And the response should contain the metering label rule:
        response.then()
                .body("id", equalTo(meteringLabelRuleId))
                .body("remote_ip_prefix", equalTo("20.0.0.0/24"))
                .body("direction", equalTo("ingress"))
                .body("metering_label_id", equalTo("e131d186-b02d-4c0b-83d5-0c0725c4f812"))
                .body("excluded", equalTo(false));
    }
}
