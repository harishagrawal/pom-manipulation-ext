/*
Test generated by RoostGPT for test metering-integration-rest using AI Type Vertex AI and AI Model code-bison-32k

{
  background: null,
  rule: null,
  scenario: 'Show Metering Label\n' +
    '    When I send a GET request to "/v2.0/metering/metering-labels/a6700594-5b7a-4105-8bfe-723b346ce866"\n' +
    '    Then the response status code should be 200\n' +
    '    And the response should be in JSON\n' +
    '    And the response should contain the metering label:\n' +
    '      | id                                   | tenant_id                           | description            | name   |\n' +
    '      | a6700594-5b7a-4105-8bfe-723b346ce866 | 45345b0ee1ea477fac0f541b2cb79cd4   | label1 description     | label1 |',
  title: 'Show Metering Label'
}

*/
 package org.commonjava.maven.ext.RoostTest;

import com.jayway.restassured.RestAssured;
import com.jayway.restassured.config.SSLConfig;
import com.jayway.restassured.path.json.JsonPath;
import com.jayway.restassured.response.Response;
import org.apache.commons.lang3.StringUtils;
import org.hamcrest.Matchers;
import org.junit.Test;

import java.io.File;

import static com.jayway.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class showMeteringLabelTest {

    private static final String ROOST_SERVER_URL = System.getenv("ROOST_SERVER_URL");
    private static final String TENANT_ID = "45345b0ee1ea477fac0f541b2cb79cd4";
    private static final String LABEL_ID = "a6700594-5b7a-4105-8bfe-723b346ce866";
    private static final String LABEL_NAME = "label1";
    private static final String LABEL_DESCRIPTION = "label1 description";

    @Test
    public void showMeteringLabel() {
        // Given
        RestAssured.baseURI = ROOST_SERVER_URL;
        RestAssured.config = RestAssured.config().sslConfig(new SSLConfig().allowAllHostnames());
        String url = "/v2.0/metering/metering-labels/" + LABEL_ID;

        // When
        Response response = given()
                .header("Content-Type", "application/json")
                .get(url);

        // Then
        response.then()
                .assertThat()
                .statusCode(200)
                .contentType("application/json")
                .body("id", equalTo(LABEL_ID))
                .body("tenant_id", equalTo(TENANT_ID))
                .body("description", equalTo(LABEL_DESCRIPTION))
                .body("name", equalTo(LABEL_NAME));
    }
}