# Test generated by RoostGPT for test gpt-turbo-artill-korebank using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=adb57fbf1b

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "/mnt/data/UpdateAccountInfo_put_others.csv"
    fields:
      - "accountNumber"
      - "customerId"
      - "email"
      - "alternatePhoneNumber"
      - "isAlternateMobileNumber"
      - "phone"
      - "isPrimaryMobileNumber"
      - "location"
      - "isStatement"
    skipHeader: true
  environments:
    development:
      API_HOST: "https://dev.api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Update Account Info - Failure and Edge Cases"
    flow:
      - think: 2
      - post:
          url: "/UpdateAccountInfo"
          headers:
            koreUserId: "InvalidUserID"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "InvalidXAuthToken"
            X-CORRELATION-ID: 1234567890
          json:
            accountNumber: "{{ accountNumber }}"
            customerId: "{{ customerId }}"
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          log: "Invalid User ID should result in 401 Authorization failure."
          expect:
            - statusCode: 401
            - hasProperty: err
            - hasProperty: ['err', 'message']

      - think: 2
      - post:
          url: "/InvalidUpdateAccountInfo"
          headers:
            koreUserId: "ValidUserID"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "InvalidXAuthToken"
            X-CORRELATION-ID: 1234567890
          json: 
            accountNumber: "{{ accountNumber }}"
            customerId: "{{ customerId }}"
            email: "not-an-email"
            alternatePhoneNumber: "12345"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "67890"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "Unknown"
            isStatement: "{{ isStatement }}"
          log: "Using an invalid URL should result in a 404 Not Found error."
          expect:
            - statusCode: 404
            - hasProperty: err
            - hasProperty: ['err', 'message']

      - think: 2
      - post:
          url: "/UpdateAccountInfo"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "InvalidAuthToken"
            X-Auth-token: "{{ XAuthToken }}"
            X-CORRELATION-ID: 1234567890
          json: 
            accountNumber: "{{ accountNumber }}"
            customerId: 0
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          log: "An invalid authorization token should result in a 401 Authorization failure."
          expect:
            - statusCode: 401
            - hasProperty: err
            - hasProperty: ['err', 'message']

      - think: 2
      - post:
          url: "/UpdateAccountInfo"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "{{ XAuthToken }}"
            X-CORRELATION-ID: 1234567890
          json: 
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          log: "Missing required fields (accountNumber and customerId) in the request body should result in a 400 Bad Request error."
          expect:
            - statusCode: 400
            - hasProperty: err
            - hasProperty: ['err', 'message']

