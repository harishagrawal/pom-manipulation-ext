# Test generated by RoostGPT for test gpt4-restA-koreBank using AI Type Open AI and AI Model gpt-4

# RoostTestHash=88810bf424

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "GetCustomerInfo_post_others.csv"
    fields:
      - "customerId"
      - "koreUserId"
      - "botId"
      - "accountId"
      - "Authorization"
      - "X-Auth-token"
      - "X-CORRELATION-ID"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Testing failure, edge and error cases for /GetCustomerInfo API"
    flow:
      - log: "Sending a request with missing required header botId"
        post:
          url: "/GetCustomerInfo"
          json:
            customerId: "{{ customerId }}"
          headers:
            koreUserId: "{{ koreUserId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1

      - log: "Sending a request with invalid URL"
        post:
          url: "/GetCustomerInfoInvalid"
          json:
            customerId: "{{ customerId }}"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          expect:
            - statusCode: 404
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1

      - log: "Sending a request with incorrect authorization token"
        post:
          url: "/GetCustomerInfo"
          json:
            customerId: "{{ customerId }}"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "incorrect_token"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1

      - log: "Sending a request with non-existing customerId"
        post:
          url: "/GetCustomerInfo"
          json:
            customerId: 9999999999
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          expect:
            - statusCode: 404
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1
