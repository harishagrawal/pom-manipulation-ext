# Test generated by RoostGPT for test gpt4-restA-koreBank using AI Type Open AI and AI Model gpt-4

# RoostTestHash=7b4d2d87f9

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "GetScheduleTransfers_post_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "userCode"
      - "accountId"
    skipHeader: true
  defaults:
    headers:
      Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
scenarios:
  - name: "GetScheduleTransfers Failure Cases"
    flow:
      - log: "Authorization failed test"
      - post:
          url: "/GetScheduleTransfers"
          headers:
            Authorization: "InvalidToken"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
      - think: 1
      - log: "Invalid URL test"
      - post:
          url: "/InvalidURL"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
      - think: 1
      - log: "Missing required header parameter test"
      - post:
          url: "/GetScheduleTransfers"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            userCode: "{{ userCode }}"
            accountId: ""
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 400
      - think: 1
      - log: "Invalid request body test"
      - post:
          url: "/GetScheduleTransfers"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "InvalidCustomerId"
            status: "Pending"
          expect:
            - statusCode: 400
