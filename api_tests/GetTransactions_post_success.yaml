# Test generated by RoostGPT for test gpt-turbo-artill-korebank using AI Type Open AI and AI Model gpt-4-1106-preview


# Test generated for /GetTransactions_post for http method type POST in artillery framework
# RoostTestHash=207beafabe

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "/mnt/data/GetTransactions_post_success.csv"
    fields:
      - "accountNumber"
      - "numOfTransactions"
      - "status"
      - "startDate"
      - "endDate"
      - "debitOrCredit"
      - "sortType"
      - "sortValue"
      - "transactionAmountAmount1"
      - "transactionAmountCurrency"
      - "categoryCodeType"
      - "categoryValue"
      - "categorySource"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - flow:
      - log: "Fetching transactions information for a given customer and account with posted status"
      - post:
          url: "/GetTransactions"
          headers:
            koreUserId: "testUserId"
            botId: "testBotId"
            accountId: "testAccountId"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "testXAuthToken"
            X-CORRELATION-ID: 1234567890
          json:
            customerId: "1045300"
            accountNumber: ["{{ accountNumber }}"]
            numOfTransactions: "{{ numOfTransactions }}"
            status: "{{ status }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            sort:
              type: "{{ sortType }}"
              value: "{{ sortValue }}"
            transactionAmount:
              amount1: "{{ transactionAmountAmount1 }}"
              currency: "{{ transactionAmountCurrency }}"
            category:
              - codeType: "{{ categoryCodeType }}"
                value: ["{{ categoryValue }}"]
                source: "{{ categorySource }}"
            debitOrCredit: "{{ debitOrCredit }}"
          # Expected behavior: Successful retrieval of transactions information
          expect:
            - statusCode: 200
            - hasProperty: "transactionId"
            - hasProperty: "amount"
            - hasHeader: "content-type"
          think: 1

      - log: "Fetching transactions information with ascending amount sort"
      - post:
          url: "/GetTransactions"
          headers:
            koreUserId: "testUserId_ascending"
            botId: "testBotId_ascending"
            accountId: "testAccountId_ascending"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "testXAuthToken_ascending"
            X-CORRELATION-ID: 1234567890
          json:
            customerId: "1045300"
            accountNumber: ["{{ accountNumber }}"]
            numOfTransactions: "{{ numOfTransactions }}"
            status: "{{ status }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            sort:
              type: "amount"
              value: "gt"
            transactionAmount:
              amount1: "{{ transactionAmountAmount1 }}"
              currency: "{{ transactionAmountCurrency }}"
            category:
              - codeType: "{{ categoryCodeType }}"
                value: ["{{ categoryValue }}"]
                source: "{{ categorySource }}"
            debitOrCredit: "{{ debitOrCredit }}"
          # Expected behavior: Transactions sorted by amount in ascending order
          expect:
            - statusCode: 200
            - hasProperty: "amount"
            - hasHeader: "content-type"
          think: 1

      - log: "Fetching transactions information with specific MCC category"
      - post:
          url: "/GetTransactions"
          headers:
            koreUserId: "testUserId_category"
            botId: "testBotId_category"
            accountId: "testAccountId_category"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "testXAuthToken_category"
            X-CORRELATION-ID: 1234567890
          json:
            customerId: "1045300"
            accountNumber: ["{{ accountNumber }}"]
            numOfTransactions: "{{ numOfTransactions }}"
            status: "{{ status }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            sort:
              type: "{{ sortType }}"
              value: "{{ sortValue }}"
            transactionAmount:
              amount1: "{{ transactionAmountAmount1 }}"
              currency: "{{ transactionAmountCurrency }}"
            category:
              - codeType: "MCC"
                value: [[ 5811, 5814 ]]
                source: "Internal"
            debitOrCredit: "{{ debitOrCredit }}"
          # Expected behavior: Transactions filtered by MCC category
          expect:
            - statusCode: 200
            - hasProperty: "MCCCode"
            - hasHeader: "content-type"
          think: 1

