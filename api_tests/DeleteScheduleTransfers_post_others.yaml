# Test generated by RoostGPT for test gpt-turbo-artill-korebank using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=47355f872f

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "/mnt/data/DeleteScheduleTransfers_post_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "userCode"
      - "accountId"
      - "customerId"
      - "paymentId"
      - "updateTransferType"
    skipHeader: true
  environments:
    staging:
      API_HOST: "https://staging.example.com"
      AUTH_TOKEN: "Bearer invalidtoken"
  plugins:
    expect: {}

scenarios:
  - name: "Delete Schedule Transfers - Failure, Edge and Error Handling Cases"
    flow:
      - log: "Sending request with missing Authorization header"
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 401
        # Missing Authorization, expect 401 unauthorized

      - think: 1

      - log: "Sending request with invalid Authorization header"
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            Authorization: "invalidtoken"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 401
        # Invalid Authorization, expect 401 unauthorized

      - think: 1

      - log: "Sending request with invalid account ID in headers"
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "invalid_account_id"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 404
        # Invalid accountId in headers, expect 404 not found

      - think: 1

      - log: "Sending request with non-existent payment ID in payload"
      - post:
          url: "/DeleteScheduleTransfers"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "0000000000000000"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 404
        # Non-existent paymentId in payload, expect 404 not found
      
      - think: 1

      - log: "Sending request to invalid URL"
      - post:
          url: "/InvalidDeleteScheduleTransfers"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 404
        # Invalid URL, expect 404 not found

