# ********RoostGPT********

# Test generated by RoostGPT for test karate-integration using AI Type Open AI and AI Model gpt-4
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Update an existing product\r\n' +
#     '    Given there is an existing product with ID 1\r\n' +
#     '    And the client provides the following product data:\r\n' +
#     '      | name           | description                      | price |\r\n' +
#     '      | Updated Product | This is an updated test product. | 15.0  |\r\n' +
#     '    When the client sends a PUT request to "/api/products/1"\r\n' +
#     '    Then the product with ID 1 should be updated with the provided details',
#   title: 'Update an existing product'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "scenario-af99d986d8.csv"
    fields:
      - "productId"
      - "name"
      - "description"
      - "price"
    skipHeader: true
  environments:
    local:
      target: "http://localhost:8080"

scenarios:
  - name: "Update an existing product"
    flow:
      - get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
          capture:
            - json: "$.id"
              as: "productId"
      - think: 1
      - log: "Validating the product with ID 1 exists"
      - put:
          url: "/products/{{ productId }}"
          json:
            id: "{{ productId }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
            - equals:
                - "{{ name }}"
                - "Updated Product"
                - "{{ description }}"
                - "This is an updated test product."
                - "{{ price }}"
                - "15.0"
      - think: 1
      - log: "The product with ID 1 should be updated with the provided details"
