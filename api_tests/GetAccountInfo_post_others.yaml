# Test generated by RoostGPT for test gpt4-restA-koreBank using AI Type Open AI and AI Model gpt-4

# RoostTestHash=8a95fbc531

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "GetAccountInfo_post_others.csv"
    fields:
      - "customerId"
      - "botId"
      - "accountId"
      - "koreUserId"
      - "Authorization"
      - "X-Auth-token"
      - "X-CORRELATION-ID"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "GetAccountInfo API test"
    flow:
      - post:
          url: "/GetAccountInfo"
          headers:
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            koreUserId: "{{ koreUserId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            "X-Auth-token": "{{ X-Auth-token }}"
            "X-CORRELATION-ID": "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
          beforeRequest: "log"
      - think: 1
      - post:
          url: "/GetAccountInfo"
          headers:
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            koreUserId: "{{ koreUserId }}"
            Authorization: "invalid_token"
            "X-Auth-token": "{{ X-Auth-token }}"
            "X-CORRELATION-ID": "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
          beforeRequest: "log"
      - think: 1
      - post:
          url: "/InvalidURL"
          headers:
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            koreUserId: "{{ koreUserId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            "X-Auth-token": "{{ X-Auth-token }}"
            "X-CORRELATION-ID": "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
          beforeRequest: "log"
      - think: 1
      - post:
          url: "/GetAccountInfo"
          headers:
            botId: "{{ botId }}"
            accountId: ""
            koreUserId: "{{ koreUserId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            "X-Auth-token": "{{ X-Auth-token }}"
            "X-CORRELATION-ID": "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
          expect:
            - statusCode: 400
            - hasProperty: "err.message"
          beforeRequest: "log"
      - think: 1
      - post:
          url: "/GetAccountInfo"
          headers:
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            koreUserId: "{{ koreUserId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            "X-Auth-token": "{{ X-Auth-token }}"
            "X-CORRELATION-ID": "{{ X-CORRELATION-ID }}"
          json:
            customerId: ""
          expect:
            - statusCode: 400
            - hasProperty: "err.message"
          beforeRequest: "log"
