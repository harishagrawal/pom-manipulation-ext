# Test generated by RoostGPT for test gpt-turbo-artill-korebank using AI Type Open AI and AI Model gpt-4-1106-preview

# RoostTestHash=c0505709a3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "/mnt/data/UpdateScheduleTransfers_put_others.csv"
    fields:
      - "paymentId"
      - "customerId"
      - "amount"
      - "scheduledDate"
      - "sourceAccountId"
      - "targetAccountId"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "scenario"
    flow:
      # Invalid authorization header to simulate authorization failure
      - log: "Request with invalid authorization header to generate 401 error"
      - put:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: ""
            botId: "invalid_value"
            userCode: ""
            accountId: "invalid_value"
            Authorization: "invalid {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - hasProperty: "message"

      - think: 1

      # Invalid URL to simulate resource not found error.
      - log: "Simulate invalid URL for resource not found error"
      - put:
          url: "/InvalidURL"
          headers:
            koreUserId: ""
            botId: "correct_value"
            userCode: ""
            accountId: "correct_value"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            paymentId: "{{ paymentId }}"
          expect:
            - statusCode: 404
            - hasHeader: "Content-Type"
            - hasProperty: "err"
            - hasProperty: "message"

      - think: 1

      # Attempt to update with invalid paymentId and customerId to check request body validation.
      - log: "Request with invalid paymentId and customerId to generate 400 error"
      - put:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: ""
            botId: "{{ botId }}"
            userCode: ""
            accountId: "{{ accountId }}"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "abcd1234"  # Invalid type for customerId, should be number
            paymentId: 1234567890  # Invalid type for paymentId, should be string
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 400
            - hasHeader: "Content-Type"
            - hasProperty: "err"
            - hasProperty: "message"

